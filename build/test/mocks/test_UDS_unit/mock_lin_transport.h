/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LIN_TRANSPORT_H
#define _MOCK_LIN_TRANSPORT_H

#include "unity.h"
#include "lin_transport.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_lin_transport_Init(void);
void mock_lin_transport_Destroy(void);
void mock_lin_transport_Verify(void);




#define Lin_SendData_Ignore() TEST_FAIL_MESSAGE("Lin_SendData requires _IgnoreAndReturn");
#define Lin_SendData_IgnoreAndReturn(cmock_retval) Lin_SendData_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Lin_SendData_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, Std_ReturnType cmock_to_return);
#define Lin_SendData_StopIgnore() Lin_SendData_CMockStopIgnore()
void Lin_SendData_CMockStopIgnore(void);
#define Lin_SendData_Expect(data, length) TEST_FAIL_MESSAGE("Lin_SendData requires _ExpectAndReturn");
#define Lin_SendData_ExpectAndReturn(data, length, cmock_retval) Lin_SendData_CMockExpectAndReturn(__LINE__, data, length, cmock_retval)
void Lin_SendData_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* data, uint8_t length, Std_ReturnType cmock_to_return);
typedef Std_ReturnType (* CMOCK_Lin_SendData_CALLBACK)(const uint8_t* data, uint8_t length, int cmock_num_calls);
void Lin_SendData_AddCallback(CMOCK_Lin_SendData_CALLBACK Callback);
void Lin_SendData_Stub(CMOCK_Lin_SendData_CALLBACK Callback);
#define Lin_SendData_StubWithCallback Lin_SendData_Stub

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
